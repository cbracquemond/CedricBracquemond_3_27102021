// flex mixins:

@mixin flex-column {
	display: flex;
	flex-direction: column;
}
@mixin flex-center($justify: center) {
	display: flex;
	justify-content: $justify;
	align-items: center;
}
@mixin flex-center-column {
	@include flex-center();
	flex-direction: column;
}

//media query mixins:

@mixin media($size) {
	@if $size == phone-only {
		@media (max-width: 599px) {
			@content;
		}
	} @else if $size == small-phone {
		@media (max-width: 390px) {
			@content;
		}
	} @else if $size == tablet-portrait {
		@media (min-width: 600px) {
			@content;
		}
	} @else if $size == tablet-landscape {
		@media (min-width: 900px) {
			@content;
		}
	} @else if $size == desktop {
		@media (min-width: 1200px) {
			@content;
		}
	} @else if $size == big-desktop {
		@media (min-width: 1800px) {
			@content;
		}
	}
}

@mixin big-screen-responsive($margin-top: 0, $margin-bottom: 0) {
	max-width: 90 * $base-scale;
	margin: $margin-top auto $margin-bottom;
}

@mixin shadow($color: rgba(0, 0, 0, 0.11), $spread: -7px) {
	box-shadow: 0px 13px 15px $spread $color;
}

@mixin hover-effect {
	&:hover {
		@include shadow($color: scale-color($color-primary, $lightness: 60%));
		transition: all 200ms;
		transform: scale(1.02);
		@content;
	}
}
@mixin heart-values($weight: 900) {
	font-size: 1.6 * $base-scale;
	position: absolute;
	@include font-awesome("\f004", $weight);
}

@mixin font-awesome($unicode, $weight: 900) {
	display: inline-block;
	font-style: normal;
	font-variant: normal;
	text-rendering: auto;
	-webkit-font-smoothing: antialiased;
	font-family: "Font Awesome 5 Free";
	font-weight: $weight;
	content: $unicode;
	@content;
}

@mixin process-icons {
	color: $color-icons;
	margin: 0 $base-scale;
	font-size: 1.15 * $base-scale;
}

@mixin process-icons-loop {
	@for $i from 1 through 3 {
		&:nth-of-type(#{$i}) p::before {
			@include process-icons;
			@include font-awesome(nth($icons-list, $i));
			display: block;
		}
	}
}

@mixin fade-in-loop($box-iteration: 3, $dish-iteration: 4, $delay: 200ms) {
	@for $i from 0 to $box-iteration {
		&:nth-of-type(#{$i + 1}) {
			$box-delay: 3 * $delay * $i;
			@for $j from 0 to $dish-iteration {
				.menu__courses__dish:nth-of-type(#{$j + 1}) {
					$dish-delay: $delay * $j;
					animation-delay: $box-delay + $dish-delay;
				}
			}
		}
	}
}

@mixin circles($size: $base-scale) {
	width: $size;
	height: $size;
	border-radius: 50%;
	margin: $base-scale;
	@for $i from 1 through 3 {
		&:nth-of-type(#{$i}) {
			background-color: nth($color-list, $i);
		}
	}
}

@mixin circle-delay {
	@for $i from 1 through 3 {
		&:nth-of-type(#{$i}) {
			animation-delay: $i * 100ms;
		}
	}
}
